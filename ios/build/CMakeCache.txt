# This is the CMakeCache file.
# For build in directory: /Users/washieu/Desktop/dev/mlc-llm/ios/build
# It was generated by CMake: /opt/homebrew/Cellar/cmake/3.26.4/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Install a signal handler to print a backtrace on segfault
BACKTRACE_ON_SEGFAULT:STRING=OFF

//Build cpp unittests
BUILD_CPP_TEST:BOOL=OFF

//Path to a program.
CCACHE_FOUND:FILEPATH=CCACHE_FOUND-NOTFOUND

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=CMAKE_ADDR2LINE-NOTFOUND

//Path to a program.
CMAKE_AR:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Release

//No help, variable specified on the command line.
CMAKE_BUILD_WITH_INSTALL_NAME_DIR:UNINITIALIZED=ON

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=-O3

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=/Users/washieu/Desktop/dev/mlc-llm/ios/build/CMakeFiles/pkgRedirects

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//Path to a program.
CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/Users/washieu/Desktop/dev/mlc-llm/ios/build

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=CMAKE_OBJCOPY-NOTFOUND

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/objdump

//Build architectures for OSX
CMAKE_OSX_ARCHITECTURES:STRING=arm64

//No help, variable specified on the command line.
CMAKE_OSX_DEPLOYMENT_TARGET:UNINITIALIZED=14.0

//The product will be built against the headers and libraries located
// inside the indicated SDK.
CMAKE_OSX_SYSROOT:STRING=iphoneos

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=mlc_llm

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=0.2.0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=2

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//Path to a program.
CMAKE_RANLIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=CMAKE_READELF-NOTFOUND

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//No help, variable specified on the command line.
CMAKE_SKIP_INSTALL_ALL_DEPENDENCY:UNINITIALIZED=ON

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/strip

//No help, variable specified on the command line.
CMAKE_SYSTEM_NAME:UNINITIALIZED=iOS

//No help, variable specified on the command line.
CMAKE_SYSTEM_VERSION:UNINITIALIZED=14.0

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Path to COMPILER-RT
COMPILER_RT_PATH:STRING=3rdparty/compiler-rt

//Path to DLPACK
DLPACK_PATH:STRING=3rdparty/dlpack/include

//Path to DMLC
DMLC_PATH:STRING=3rdparty/dmlc-core/include

//Path to a library.
FOUNDATION_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS16.4.sdk/System/Library/Frameworks/Foundation.framework

//Git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//Defaults the index datatype to int64
INDEX_DEFAULT_I64:STRING=ON

//Install compiler infrastructure
INSTALL_DEV:STRING=OFF

//Path to a library.
METAL_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS16.4.sdk/System/Library/Frameworks/Metal.framework

//Hide private symbols
MLC_HIDE_PRIVATE_SYMBOLS:BOOL=ON

//No help, variable specified on the command line.
MLC_LLM_INSTALL_STATIC_LIB:UNINITIALIZED=ON

//Path to PicoJSON
PICOJSON_PATH:STRING=3rdparty/picojson

//Path to a program.
PYTHON:FILEPATH=/opt/homebrew/bin/python3

//Path to RANG
RANG_PATH:STRING=3rdparty/rang/include

//The path to rocm
ROCM_PATH:STRING=/opt/rocm

//Path to a library.
SECURITY_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS16.4.sdk/System/Library/Frameworks/Security.framework

//Builds test binaries.
SPM_BUILD_TEST:BOOL=OFF

//Runs gcov to test coverage.
SPM_COVERAGE:BOOL=OFF

//Override system processor
SPM_CROSS_SYSTEM_PROCESSOR,:BOOL=OFF

//Use /MT flag in MSVC build
SPM_ENABLE_MSVC_MT_BUILD,:BOOL=OFF

//Enables NFKC compile
SPM_ENABLE_NFKC_COMPILE:BOOL=OFF

//Builds shared libaries in addition to static libraries.
SPM_ENABLE_SHARED:BOOL=OFF

//Enable TCMalloc if available.
SPM_ENABLE_TCMALLOC:BOOL=OFF

//Makes a tensorflow compatible shared file.
SPM_ENABLE_TENSORFLOW_SHARED:BOOL=OFF

//Disable thread_local operator
SPM_NO_THREADLOCAL:BOOL=OFF

//Link static library of TCMALLOC.
SPM_TCMALLOC_STATIC:BOOL=OFF

//Use built-in protobuf
SPM_USE_BUILTIN_PROTOBUF:BOOL=ON

//Use external abseil
SPM_USE_EXTERNAL_ABSL:BOOL=OFF

//Print CMake option summary after configuring
SUMMARIZE:STRING=OFF

//Use 'mold' or 'lld' if found when invoking compiler to link artifact
USE_ALTERNATIVE_LINKER:STRING=AUTO

//Enable Intel AMX
USE_AMX:STRING=OFF

//Build with Arm Compute Library
USE_ARM_COMPUTE_LIB:STRING=OFF

//Build with Arm Compute Library graph executor
USE_ARM_COMPUTE_LIB_GRAPH_EXECUTOR:STRING=OFF

//The blas library to be linked
USE_BLAS:STRING=none

//Build with BNNS support
USE_BNNS:STRING=OFF

//Build with BYODT software emulated posit custom datatype
USE_BYODT_POSIT:STRING=OFF

//Use ccache if found when invoking compiler
USE_CCACHE:STRING=AUTO

//Build with CLML Codegen support
USE_CLML:STRING=OFF

//Build with CLML graph runtime
USE_CLML_GRAPH_EXECUTOR:STRING=OFF

//Build with Arm CMSIS-NN
USE_CMSISNN:STRING=OFF

//Build with coreml support
USE_COREML:STRING=OFF

//Build CPP RPC
USE_CPP_RPC:STRING=OFF

//Build with cuBLAS
USE_CUBLAS:STRING=OFF

//Build with CUDA
USE_CUDA:STRING=OFF

//Build with cuDNN
USE_CUDNN:STRING=OFF

//Build with cuRAND
USE_CURAND:STRING=OFF

//Use user-defined custom logging, tvm::runtime::detail::LogFatalImpl
// and tvm::runtime::detail::LogMessageImpl must be implemented
USE_CUSTOM_LOGGING:STRING=OFF

//Build with CUTLASS
USE_CUTLASS:STRING=OFF

//Enable DNNL codegen
USE_DNNL:STRING=OFF

//Build with Arm(R) Ethos(TM)-N
USE_ETHOSN:STRING=OFF

//Use TVM's POD compatible Map
USE_FALLBACK_STL_MAP:STRING=OFF

//Build with tiny graph executor with CUDA Graph for GPUs
USE_GRAPH_EXECUTOR_CUDA_GRAPH:STRING=OFF

//Build with Hexagon support
USE_HEXAGON:STRING=OFF

//Path to git repo containing external Hexagon runtime sources
// or libraries
USE_HEXAGON_EXTERNAL_LIBS:STRING=OFF

//Path to Hexagon specific gtest version for runtime cpp tests.
USE_HEXAGON_GTEST:STRING=/path/to/hexagon/gtest

//Enable Hexagon RPC using minRPC implementation over Android.
USE_HEXAGON_RPC:STRING=OFF

//Path to the Hexagon SDK root (required for Hexagon support)
USE_HEXAGON_SDK:STRING=/path/to/sdk

//Build iOS RPC
USE_IOS_RPC:STRING=OFF

//Whether to use spirv-tools.and SPIRV-Headers from Khronos github
// or gitlab
USE_KHRONOS_SPIRV:STRING=OFF

//Build with libtorch support
USE_LIBTORCH:STRING=OFF

//Build with LLVM, can be set to specific llvm-config path
USE_LLVM:STRING=OFF

//No help, variable specified on the command line.
USE_METAL:UNINITIALIZED=ON

//Build with micro.standalone_runtime support
USE_MICRO_STANDALONE_RUNTIME:STRING=OFF

//Build with ROCM:MIOpen
USE_MIOPEN:STRING=OFF

//MKL root path when use MKL blas
USE_MKL:STRING=OFF

//Build with MT
USE_MSVC_MT:STRING=OFF

//Build with nnpack support
USE_NNPACK:STRING=OFF

//Build with OpenCL
USE_OPENCL:STRING=OFF

//Enable OpenCL memory object access to host
USE_OPENCL_ENABLE_HOST_PTR:STRING=OFF

//Path to OpenCL specific gtest version for runtime cpp tests.
USE_OPENCL_GTEST:STRING=/path/to/opencl/gtest

//Build with OpenMP thread pool implementation
USE_OPENMP:STRING=OFF

//Use Performance Application Programming Interface (PAPI) to read
// performance counters
USE_PAPI:STRING=OFF

//Build with PyTorch TVMDSOOp
USE_PT_TVMDSOOP:STRING=OFF

//Build with random support
USE_RANDOM:STRING=ON

//Building Relay in debug mode...
USE_RELAY_DEBUG:STRING=OFF

//Build with ROCM:RoCBLAS
USE_ROCBLAS:STRING=OFF

//Build with ROCM
USE_ROCM:STRING=OFF

//Build with RTTI
USE_RTTI:STRING=ON

//Build with Rust based compiler extensions, STATIC, DYNAMIC, or
// OFF
USE_RUST_EXT:STRING=OFF

//Build with sort support
USE_SORT:STRING=ON

//whether enable SPIRV_KHR_DOT_PRODUCT
USE_SPIRV_KHR_INTEGER_DOT_PRODUCT:STRING=OFF

//Include stackvm into the runtime
USE_STACKVM_RUNTIME:STRING=OFF

//Build with ONNX Codegen support
USE_TARGET_ONNX:STRING=OFF

//TensorFlow root path when use TFLite
USE_TENSORFLOW_PATH:STRING=none

//Build with TensorRT Codegen support
USE_TENSORRT_CODEGEN:STRING=OFF

//Build with TensorRT runtime
USE_TENSORRT_RUNTIME:STRING=OFF

//Build with tflite support
USE_TFLITE:STRING=OFF

//Build with TensorFlow TVMDSOOp
USE_TF_TVMDSOOP:STRING=OFF

//Build with thread support
USE_THREADS:STRING=ON

//Build with Thrust
USE_THRUST:STRING=OFF

//Build with UMA support
USE_UMA:STRING=OFF

//Build with Verilator support
USE_VERILATOR:STRING=OFF

//Build with VITIS-AI Codegen support
USE_VITIS_AI:STRING=OFF

//Build with Vulkan
USE_VULKAN:STRING=OFF

//Value Computed by CMake
mlc_llm_BINARY_DIR:STATIC=/Users/washieu/Desktop/dev/mlc-llm/ios/build

//Value Computed by CMake
mlc_llm_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
mlc_llm_SOURCE_DIR:STATIC=/Users/washieu/Desktop/dev/mlc-llm

//Value Computed by CMake
sentencepiece_BINARY_DIR:STATIC=/Users/washieu/Desktop/dev/mlc-llm/ios/build/tokenizers/sentencepiece

//Value Computed by CMake
sentencepiece_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
sentencepiece_SOURCE_DIR:STATIC=/Users/washieu/Desktop/dev/mlc-llm/3rdparty/tokenizers-cpp/sentencepiece

//Value Computed by CMake
tokenizers_cpp_BINARY_DIR:STATIC=/Users/washieu/Desktop/dev/mlc-llm/ios/build/tokenizers

//Value Computed by CMake
tokenizers_cpp_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
tokenizers_cpp_SOURCE_DIR:STATIC=/Users/washieu/Desktop/dev/mlc-llm/3rdparty/tokenizers-cpp

//Value Computed by CMake
tvm_BINARY_DIR:STATIC=/Users/washieu/Desktop/dev/mlc-llm/ios/build/tvm

//Value Computed by CMake
tvm_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
tvm_SOURCE_DIR:STATIC=/Users/washieu/Desktop/dev/mlc-llm/3rdparty/tvm


########################
# INTERNAL cache entries
########################

//Result of TRY_COMPILE
BUILD_FOR_ANDROID:INTERNAL=FALSE
//Result of TRY_COMPILE
BUILD_FOR_HEXAGON:INTERNAL=FALSE
//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/Users/washieu/Desktop/dev/mlc-llm/ios/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=26
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=4
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.26.4/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.26.4/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.26.4/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.26.4/bin/ccmake
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=MACHO
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/Users/washieu/Desktop/dev/mlc-llm
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=6
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/opt/homebrew/Cellar/cmake/3.26.4/share/cmake
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Test SUPPORT_CXX17
SUPPORT_CXX17:INTERNAL=1
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=/Users/washieu/Desktop/dev/mlc-llm/ios/build

